For m,n \in \mathbb{N}, m\geq 1 and a given function f : \mathbb{R}^m\longrightarrow \mathbb{R} the polynomial interpolation problem (PIP) is to determine a \emph{generic node set} P \subseteq \mathbb{R}^m and the coefficients of the uniquely defined polynomial Q\in\mathbb{R}[x_1,\dots,x_m] in m variables of degree \mathrm{deg}(Q)\leq n \in \mathbb{N} that fits f on P, i.e., Q(p) = f(p), \forall\, p \in P. We here show that in general, i.e., for arbitrary m,n \in \mathbb{N}, m \geq 1, there exists an algorithm that determines P and computes the N(\mbox{m,n})=\#P coefficients of Q in \mathcal{O}\big(N(\mbox{m,n})^2\big) time using \mathcal{O}\big(\mbox{m}N(\mbox{m,n})\big) storage, without inverting the occurring Vandermonde matrix. We provide such an algorithm, termed PIP-SOLVER, based on a recursive decomposition of the problem and prove its correctness. Since the present approach solves the PIP without matrix inversion, it is computationally more efficient and numerically more robust than previous approaches. We demonstrate this in numerical experiments and compare with previous approaches based on matrix inversion and linear systems solving.