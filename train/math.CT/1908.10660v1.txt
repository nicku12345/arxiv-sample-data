We discuss the foundations of 2-dimensional graphical languages, with a view towards their computer implementation in a 'compiler' for monoidal categories. In particular, we discuss the close relationship between string diagrams, pasting diagrams, linear logic proof trees and k-d trees, the last being a data structure from computational geometry and computer graphics that recursively partitions a space. We introduce a minor variant of cubical pasting diagrams, which we call 'brick diagrams', which are used in the Statebox visual programming language. This paper is intended as a discussion and literature review, and contains little mathematics.