A new computational method that uses polynomial equations and dynamical systems to evaluate logical propositions is introduced and applied to Goedel's incompleteness theorems. The truth value of a logical formula subject to a set of axioms is computed from the solution to the corresponding system of polynomial equations. A reference by a formula to its own provability is shown to be a recurrence relation, which can be either interpreted as such to generate a discrete dynamical system, or interpreted in a static way to create an additional simultaneous equation. In this framework the truth values of logical formulas and other polynomial objectives have complex data structures: sets of elementary values, or dynamical systems that generate sets of infinite sequences of such solution-value sets. Besides the routine result that a formula has a definite elementary value, these data structures encode several exceptions: formulas that are ambiguous, unsatisfiable, unsteady, or contingent. These exceptions represent several semantically different types of undecidability; none causes any fundamental problem for mathematics. It is simple to calculate that Goedel's formula, which asserts that it cannot be proven, is exceptional in specific ways: interpreted statically, the formula defines an inconsistent system of equations (thus it is called unsatisfiable); interpreted dynamically, it defines a dynamical system that has a periodic orbit and no fixed point (thus it is called unsteady). These exceptions are not catastrophic failures of logic; they are accurate mathematical descriptions of Goedel's self-referential construction. Goedel's analysis does not reveal any essential incompleteness in formal reasoning systems, nor any barrier to proving the consistency of such systems by ordinary mathematical means.