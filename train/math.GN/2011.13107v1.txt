We give a Python program that is capable to compute and print all the distinct trivalent 2-stratifold graphs up to N white vertices with trivial fundamental group. Our algorithm uses the three basic operations to construct new graphs from any set of given graphs. We iterate this process to construct all the desired graphs. The algorithm includes an optimization that reduces the repetition of generated graphs, this is done by recognizing equivalent white vertices of a graph under automorphism. We use a variation of the AHU algorithm to identify those vertices and as well to distinguish isomorphic graphs in linear time. The returned string from the AHU algorithm is also used as a hashing function to search for repeated graphs in amortized constant time.