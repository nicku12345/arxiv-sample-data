We consider the one-person game of peg solitaire played on a computer. Two popular board shapes are the 33-hole cross-shaped board, and the 15-hole triangle board---we use them as examples throughout. The basic game begins from a full board with one peg missing and the goal is to finish at a board position with one peg. First, we discuss ways to solve the basic game on a computer. Then we consider the problem of quickly distinguishing board positions where the goal can still be reached ("winning" board positions) from those where it cannot. This enables a computer to alert the player if a jump under consideration leads to a dead end. On the 15-hole triangle board, it is possible to identify all winning board positions (from any single vacancy start) by storing a key set of 437 board positions. For the "central game" on the 33-hole cross-shaped board, we can identify all winning board positions by storing 839,536 board positions. By viewing a successful game as a traversal of a directed graph of winning board positions, we apply a simple algorithm to count the number of ways to traverse this graph, and calculate that the total number of solutions to the central game is 40,861,647,040,079,968. Our analysis can also determine how quickly we can reach a "dead board position", where a one peg finish is no longer possible.