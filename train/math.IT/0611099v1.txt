We study how much memory one-pass compression algorithms need to compete with the best multi-pass algorithms. We call a one-pass algorithm an (f (n, \ell))-footprint compressor if, given n, \ell and an n-ary string S, it stores S in ((\rule{0ex}{2ex} O (H_\ell (S)) + o (\log n)) |S| + O (n^{\ell + 1} \log n)) bits -- where (H_\ell (S)) is the \ellth-order empirical entropy of S -- while using at most (f (n, \ell)) bits of memory. We prove that, for any (\epsilon > 0) and some (f (n, \ell) \in O (n^{\ell + \epsilon} \log n)), there is an (f (n, \ell))-footprint compressor; on the other hand, there is no (f (n, \ell))-footprint compressor for (f (n, \ell) \in o (n^\ell \log n)).