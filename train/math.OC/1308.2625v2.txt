The idea of iterative process optimization based on collected output measurements, or "real-time optimization" (RTO), has gained much prominence in recent decades, with many RTO algorithms being proposed, researched, and developed. While the essential goal of these schemes is to drive the process to its true optimal conditions without violating any safety-critical, or "hard", constraints, no generalized, unified approach for guaranteeing this behavior exists. In this two-part paper, we propose an implementable set of conditions that can enforce these properties for any RTO algorithm. This second part examines the practical side of the sufficient conditions for feasibility and optimality (SCFO) proposed in the first and focuses on how they may be enforced in real application, where much of the knowledge required for the conceptual SCFO is unavailable. Methods for improving convergence speed are also considered.