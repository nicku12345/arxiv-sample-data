We consider the problem of finding a specific target individual hiding in a social network. We propose a method for network vertex search that looks for the target vertex by sequentially examining the neighbors of a set of "known" vertices to which the target vertex may have connected. The objective is to find the target vertex as quickly as possible from amongst the neighbors of the known vertices. We model this type of search as successively drawing marbles from a set of urns, where each urn represents one of the known vertices and the marbles in each urn represent the respective vertex's neighbors. Using a dynamic programming approach, we analyze this model and show that there is always an optimal "block" policy, in which all of the neighbors of a known vertex are examined before moving on to another vertex. Surprisingly, this block policy result holds for arbitrary dependencies in the connection probabilities of the target vertex and known vertices. Furthermore, we give precise characterizations of the optimal block policy in two specific cases: (1) when the connections between the known vertices and the target vertex are independent, and (2) when the target vertex is connected to at most one known vertex. Finally, we provide some general monotonicity properties and discuss the relevance of our findings in social media and other applications.