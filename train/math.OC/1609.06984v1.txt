In this chapter we look at one of the canonical driving examples for multi-agent systems: average consensus. In this scenario, a group of agents seek to agree on the average of their initial states. Depending on the particular application, such states might correspond to sensor measurements, estimates about the position of a target, or some other data that needs to be fused. Due to its numerous applications in networked systems, many algorithmic solutions exist to the multi-agent average consensus problem; however, a majority of them rely on agents having continuous or periodic availability of information from other agents. Unfortunately, this assumption leads to inefficient implementations in terms of energy consumption, communication bandwidth, network congestion, and processor usage. Motivated by these observations, our main goal here is the design of provably correct distributed event-triggered strategies that autonomously decide when communication and control updates should occur so that the resulting asynchronous network executions still achieve average consensus.